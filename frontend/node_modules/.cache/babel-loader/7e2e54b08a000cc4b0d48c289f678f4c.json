{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jeffrey/Code/react/blog-project/frontend/src/components/main/Post.js\";\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport TagList from \"./blog-post-preview/TagList\";\nimport axios from \"axios\";\nimport { SERVER_URL } from \"../../config\";\n\nconst DoRedirect = props => {\n  if (!props.redirect) {\n    return null;\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/invalid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_c = DoRedirect;\n\nconst DoRender = ({\n  post\n}) => {\n  if (!post || post.error) {\n    return null;\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card preview-post mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-title primary\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-subtitle text-muted\",\n          children: `${post.date} ${post.time}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"card-link\",\n          children: \"Read More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TagList, {\n          tags: post.tags\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c2 = DoRender;\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: {},\n      redirect: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(DoRedirect, {\n        redirect: this.state.redirect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DoRender, {\n        post: this.state.post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n  componentDidMount() {\n    axios.get(`${SERVER_URL}/posts/${this.props.match.params.id}`).then(post => {\n      console.log(post);\n      if (post.data[0].error) this.setState({\n        redirect: true\n      });else this.setState({\n        post: post.data[0]\n      });\n    });\n  }\n\n}\n\nexport default Post;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DoRedirect\");\n$RefreshReg$(_c2, \"DoRender\");","map":{"version":3,"sources":["/home/jeffrey/Code/react/blog-project/frontend/src/components/main/Post.js"],"names":["React","Component","Redirect","TagList","axios","SERVER_URL","DoRedirect","props","redirect","DoRender","post","error","title","date","time","content","tags","Post","constructor","state","render","componentDidMount","get","match","params","id","then","console","log","data","setState"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,MAAI,CAACA,KAAK,CAACC,QAAX,EAAqB;AACnB,WAAO,IAAP;AACD,GAFD,MAEO;AACL,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,CAND;;KAAMF,U;;AAQN,MAAMG,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC7B,MAAI,CAACA,IAAD,IAASA,IAAI,CAACC,KAAlB,EAAyB;AACvB,WAAO,IAAP;AACD,GAFD,MAEO;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC,oBAAb;AAAA,oBAAmCD,IAAI,CAACE;AAAxC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,0BAAb;AAAA,oBAA0C,GAAEF,IAAI,CAACG,IAAK,IAAGH,IAAI,CAACI,IAAK;AAAnE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAIE;AAAK,UAAA,uBAAuB,EAAEJ,IAAI,CAACK;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAJF,eAME;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,OAAD;AAAS,UAAA,IAAI,EAAEL,IAAI,CAACM;AAApB;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;AACF,CAlBD;;MAAMP,Q;;AAoBN,MAAMQ,IAAN,SAAmBhB,SAAnB,CAA6B;AAC3BiB,EAAAA,WAAW,CAACX,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKY,KAAL,GAAa;AACXT,MAAAA,IAAI,EAAE,EADK;AAEXF,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEDY,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWX;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAE,KAAKW,KAAL,CAAWT;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAEDW,EAAAA,iBAAiB,GAAG;AAClBjB,IAAAA,KAAK,CACFkB,GADH,CACQ,GAAEjB,UAAW,UAAS,KAAKE,KAAL,CAAWgB,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,EADzD,EAEGC,IAFH,CAEShB,IAAD,IAAU;AACdiB,MAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAZ;AACA,UAAIA,IAAI,CAACmB,IAAL,CAAU,CAAV,EAAalB,KAAjB,EAAwB,KAAKmB,QAAL,CAAc;AAAEtB,QAAAA,QAAQ,EAAE;AAAZ,OAAd,EAAxB,KACK,KAAKsB,QAAL,CAAc;AAAEpB,QAAAA,IAAI,EAAEA,IAAI,CAACmB,IAAL,CAAU,CAAV;AAAR,OAAd;AACN,KANH;AAOD;;AA3B0B;;AA8B7B,eAAeZ,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport TagList from \"./blog-post-preview/TagList\";\nimport axios from \"axios\";\nimport { SERVER_URL } from \"../../config\";\n\nconst DoRedirect = (props) => {\n  if (!props.redirect) {\n    return null;\n  } else {\n    return <Redirect to=\"/invalid\" />;\n  }\n};\n\nconst DoRender = ({ post }) => {\n  if (!post || post.error) {\n    return null;\n  } else {\n    return (\n      <div className=\"card preview-post mb-3\">\n        <div className=\"card-body\">\n          <p className=\"card-title primary\">{post.title}</p>\n          <p className=\"card-subtitle text-muted\">{`${post.date} ${post.time}`}</p>\n\n          <div dangerouslySetInnerHTML={post.content} />\n\n          <a className=\"card-link\">Read More</a>\n          <TagList tags={post.tags} />\n        </div>\n      </div>\n    );\n  }\n};\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      post: {},\n      redirect: false,\n    };\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <DoRedirect redirect={this.state.redirect} />\n        <DoRender post={this.state.post} />\n      </React.Fragment>\n    );\n  }\n\n  componentDidMount() {\n    axios\n      .get(`${SERVER_URL}/posts/${this.props.match.params.id}`)\n      .then((post) => {\n        console.log(post);\n        if (post.data[0].error) this.setState({ redirect: true });\n        else this.setState({ post: post.data[0] });\n      });\n  }\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}